/* This file was created automatically, do not edit! */

using System.Runtime.Serialization;
using Iviz.Msgs;
using ISerializable = Iviz.Msgs.ISerializable;

namespace Iviz.Msgs2.RclInterfaces
{
    [DataContract]
    public sealed class Log : IDeserializable<Log>, IMessageRos2
    {
        //#
        //# Severity level constants
        //# 
        //# These logging levels follow the Python Standard
        //# https://docs.python.org/3/library/logging.html#logging-levels
        //# And are implemented in rcutils as well
        //# https://github.com/ros2/rcutils/blob/35f29850064e0c33a4063cbc947ebbfeada11dba/include/rcutils/logging.h#L164-L172
        //# This leaves space for other standard logging levels to be inserted in the middle in the future,
        //# as well as custom user defined levels.
        //# Since there are several other logging enumeration standard for different implementations,
        //# other logging implementations may need to provide level mappings to match their internal implementations.
        //#
        // Debug is for pedantic information, which is useful when debugging issues.
        public const byte DEBUG = 10;
        // Info is the standard informational level and is used to report expected
        // information.
        public const byte INFO = 20;
        // Warning is for information that may potentially cause issues or possibly unexpected
        // behavior.
        public const byte WARN = 30;
        // Error is for information that this node cannot resolve.
        public const byte ERROR = 40;
        // Information about a impending node shutdown.
        public const byte FATAL = 50;
        //#
        //# Fields
        //#
        // Timestamp when this message was generated by the node.
        [DataMember (Name = "stamp")] public time Stamp;
        // Corresponding log level, see above definitions.
        [DataMember (Name = "level")] public byte Level;
        // The name representing the logger this message came from.
        [DataMember (Name = "name")] public string Name;
        // The full log message.
        [DataMember (Name = "msg")] public string Msg;
        // The file the message came from.
        [DataMember (Name = "file")] public string File;
        // The function the message came from.
        [DataMember (Name = "function")] public string Function;
        // The line in the file the message came from.
        [DataMember (Name = "line")] public uint Line;
    
        /// Constructor for empty message.
        public Log()
        {
            Name = "";
            Msg = "";
            File = "";
            Function = "";
        }
        
        /// Constructor with buffer.
        public Log(ref ReadBuffer2 b)
        {
            b.Deserialize(out Stamp);
            b.Deserialize(out Level);
            b.DeserializeString(out Name);
            b.DeserializeString(out Msg);
            b.DeserializeString(out File);
            b.DeserializeString(out Function);
            b.Deserialize(out Line);
        }
        
        public Log RosDeserialize(ref ReadBuffer2 b) => new Log(ref b);
    
        public void RosSerialize(ref WriteBuffer2 b)
        {
            b.Serialize(Stamp);
            b.Serialize(Level);
            b.Serialize(Name);
            b.Serialize(Msg);
            b.Serialize(File);
            b.Serialize(Function);
            b.Serialize(Line);
        }
        
        public void RosValidate()
        {
            if (Name is null) BuiltIns.ThrowNullReference();
            if (Msg is null) BuiltIns.ThrowNullReference();
            if (File is null) BuiltIns.ThrowNullReference();
            if (Function is null) BuiltIns.ThrowNullReference();
        }
    
        public void GetRosMessageLength(ref int c)
        {
            WriteBuffer2.Advance(ref c, Stamp);
            WriteBuffer2.Advance(ref c, Level);
            WriteBuffer2.Advance(ref c, Name);
            WriteBuffer2.Advance(ref c, Msg);
            WriteBuffer2.Advance(ref c, File);
            WriteBuffer2.Advance(ref c, Function);
            WriteBuffer2.Advance(ref c, Line);
        }
    
        /// <summary> Full ROS name of this message. </summary>
        public const string MessageType = "rcl_interfaces/Log";
    
        public string RosMessageType => MessageType;
    
        public override string ToString() => Extensions.ToString(this);
    }
}
